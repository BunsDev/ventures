{"ast":null,"code":"import config from \"../config\";\nimport async from 'async';\nimport { ERROR, GET_BALANCES, BALANCES_RETURNED, GET_BALANCES_LIGHT, BALANCES_LIGHT_RETURNED, ZAP, ZAP_RETURNED, GET_BEST_PRICE, GET_BEST_PRICE_RETURNED, USD_PRICE_RETURNED, MAX_UINT256 } from '../constants';\nimport Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport { injected, walletconnect, walletlink, ledger, trezor, frame, fortmatic, portis, squarelink, torus, authereum } from \"./connectors\";\n\nconst rp = require('request-promise');\n\nconst ethers = require('ethers');\n\nconst Dispatcher = require('flux').Dispatcher;\n\nconst Emitter = require('events').EventEmitter;\n\nconst dispatcher = new Dispatcher();\nconst emitter = new Emitter();\n\nclass Store {\n  constructor() {\n    this.resetProfile = () => {\n      const defaultvalues = this._getDefaultValues();\n\n      store.setStore({\n        assets: defaultvalues.assets\n      });\n    };\n\n    this._getDefaultValues = () => {\n      return {\n        assets: [{\n          id: 'GDAO',\n          name: 'GDAO',\n          symbol: 'GDAO',\n          description: 'Governor DAO',\n          investSymbol: 'GDAO',\n          erc20address: '0x4DaC3e07316D2A31baABb252D89663deE8F76f09',\n          governatorContract: '0x09e16AD071f4F80c02856275116cC772ba74b62c',\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          abi: config.governatorABI,\n          version: 3,\n          disabled: true,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: true,\n          price_id: 'governor-dao'\n        }, {\n          id: 'ETHv1',\n          name: 'ETH',\n          symbol: 'ETH',\n          description: 'Ethereum',\n          investSymbol: 'iETH',\n          erc20address: 'Ethereum',\n          governatorContract: '0x9Dde7cdd09dbed542fC422d18d89A589fA9fD4C0',\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          decimals: 18,\n          investedBalance: 0,\n          price: 0,\n          poolValue: 0,\n          abi: config.IEarnABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          price_id: 'ethereum'\n        }]\n      };\n    };\n\n    this._checkApproval = async (asset, account, amount, contract, callback) => {\n      if (asset.erc20address === 'Ethereum') {\n        return callback();\n      }\n\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address);\n\n      try {\n        const allowance = await erc20Contract.methods.allowance(account.address, contract).call({\n          from: account.address\n        });\n        let ethAllowance = web3.utils.fromWei(allowance, \"ether\");\n\n        if (asset.decimals !== 18) {\n          ethAllowance = (allowance * 10 ** asset.decimals).toFixed(0);\n        }\n\n        const amountToSend = MAX_UINT256;\n\n        if (parseFloat(ethAllowance) < parseFloat(amount)) {\n          /*\n            code to accomodate for \"assert _value == 0 or self.allowances[msg.sender][_spender] == 0\" in contract\n            We check to see if the allowance is > 0. If > 0 set to 0 before we set it to the correct amount.\n          */\n          if (['GDAOv2'].includes(asset.id) && ethAllowance > 0) {\n            await erc20Contract.methods.approve(contract, web3.utils.toWei('0', \"ether\")).send({\n              from: account.address,\n              gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n            });\n          }\n\n          await erc20Contract.methods.approve(contract, amountToSend).send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n          });\n          callback();\n        } else {\n          callback();\n        }\n      } catch (error) {\n        if (error.message) {\n          return callback(error.message);\n        }\n\n        callback(error);\n      }\n    };\n\n    this._checkApprovalWaitForConfirmation = async (asset, account, amount, contract, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address);\n      const allowance = await erc20Contract.methods.allowance(account.address, contract).call({\n        from: account.address\n      });\n      const ethAllowance = web3.utils.fromWei(allowance, \"ether\");\n\n      if (parseFloat(ethAllowance) < parseFloat(amount)) {\n        if (['GDAOv2'].includes(asset.id) && ethAllowance > 0) {\n          erc20Contract.methods.approve(contract, web3.utils.toWei('0', \"ether\")).send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n          }).on('transactionHash', async function (hash) {\n            erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({\n              from: account.address,\n              gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n            }).on('transactionHash', function (hash) {\n              callback();\n            }).on('error', function (error) {\n              if (!error.toString().includes(\"-32601\")) {\n                if (error.message) {\n                  return callback(error.message);\n                }\n\n                callback(error);\n              }\n            });\n          }).on('error', function (error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if (error.message) {\n                return callback(error.message);\n              }\n\n              callback(error);\n            }\n          });\n        } else {\n          erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n          }).on('transactionHash', function (hash) {\n            callback();\n          }).on('error', function (error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if (error.message) {\n                return callback(error.message);\n              }\n\n              callback(error);\n            }\n          });\n        }\n      } else {\n        callback();\n      }\n    };\n\n    this._callInvest = async (asset, account, amount, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let governatorContract = new web3.eth.Contract(asset.abi, asset.governatorContract);\n\n      if (asset.erc20address === 'Ethereum') {\n        governatorContract.methods[asset.invest]().send({\n          from: account.address,\n          value: web3.utils.toWei(amount, \"ether\"),\n          gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n        }).on('transactionHash', function (hash) {\n          console.log(hash);\n          callback(null, hash);\n        }).on('confirmation', function (confirmationNumber, receipt) {\n          console.log(confirmationNumber, receipt);\n        }).on('receipt', function (receipt) {\n          console.log(receipt);\n        }).on('error', function (error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if (error.message) {\n              return callback(error.message);\n            }\n\n            callback(error);\n          }\n        }).catch(error => {\n          if (!error.toString().includes(\"-32601\")) {\n            if (error.message) {\n              return callback(error.message);\n            }\n\n            callback(error);\n          }\n        });\n      } else {\n        var amountToSend = web3.utils.toWei(amount, \"ether\");\n\n        if (asset.decimals !== 18) {\n          amountToSend = amount * 10 ** asset.decimals;\n        }\n\n        governatorContract.methods[asset.invest](amountToSend).send({\n          from: account.address,\n          gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n        }).on('transactionHash', function (hash) {\n          console.log(hash);\n          callback(null, hash);\n        }).on('confirmation', function (confirmationNumber, receipt) {\n          console.log(confirmationNumber, receipt);\n        }).on('receipt', function (receipt) {\n          console.log(receipt);\n        }).on('error', function (error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if (error.message) {\n              return callback(error.message);\n            }\n\n            callback(error);\n          }\n        }).catch(error => {\n          if (!error.toString().includes(\"-32601\")) {\n            if (error.message) {\n              return callback(error.message);\n            }\n\n            callback(error);\n          }\n        });\n      }\n    };\n\n    this.getBalancesLight = async () => {\n      const account = store.getStore('account');\n      const assets = store.getStore('assets');\n\n      if (!account || !account.address) {\n        return false;\n      }\n\n      const web3 = await this._getWeb3Provider();\n\n      if (!web3) {\n        return null;\n      }\n\n      async.map(assets, (asset, callback) => {\n        async.parallel([callbackInner => {\n          this._getERC20Balance(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getInvestedBalance(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getPoolPrice(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getMaxAPR(web3, asset, account, callbackInner);\n        }], (err, data) => {\n          asset.balance = data[0];\n          asset.investedBalance = data[1];\n          asset.price = data[2];\n          asset.maxApr = data[3];\n          callback(null, asset);\n        });\n      }, (err, assets) => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        store.setStore({\n          assets: assets\n        });\n        return emitter.emit(BALANCES_LIGHT_RETURNED, assets);\n      });\n    };\n\n    this.getBalances = async () => {\n      const account = store.getStore('account');\n      const assets = store.getStore('assets');\n\n      if (!account || !account.address) {\n        return false;\n      }\n\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      async.map(assets, (asset, callback) => {\n        async.parallel([callbackInner => {\n          this._getERC20Balance(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getPoolPrice(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getPoolValue(web3, asset, account, callbackInner);\n        }, callbackInner => {\n          this._getBalance(web3, asset, account, callbackInner);\n        }], (err, data) => {\n          asset.balance = data[0];\n          asset.price = data[2];\n          asset.poolValue = data[4];\n          asset.current = data[6];\n          asset.recommended = data[7];\n          asset.tokenBalance = data[8];\n          callback(null, asset);\n        });\n      }, (err, assets) => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        store.setStore({\n          assets: assets\n        });\n        return emitter.emit(BALANCES_RETURNED, assets);\n      });\n    };\n\n    this._getERC20Balance = async (web3, asset, account, callback) => {\n      if (asset.erc20address === 'Ethereum') {\n        try {\n          const eth_balance = web3.utils.fromWei(await web3.eth.getBalance(account.address), \"ether\");\n          callback(null, parseFloat(eth_balance));\n        } catch (ex) {\n          console.log(ex);\n          return callback(ex);\n        }\n      } else {\n        let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address);\n\n        try {\n          var balance = await erc20Contract.methods.balanceOf(account.address).call({\n            from: account.address\n          });\n          balance = parseFloat(balance) / 10 ** asset.decimals;\n          callback(null, parseFloat(balance));\n        } catch (ex) {\n          console.log(ex);\n          return callback(ex);\n        }\n      }\n    };\n\n    this._getBalance = async (web3, asset, account, callback) => {\n      if (asset.governatorContract === null) {\n        return callback(null, 0);\n      }\n\n      if (asset.erc20address === 'Ethereum') {\n        try {\n          const eth_balance = web3.utils.fromWei(await web3.eth.getBalance(asset.governatorContract), \"ether\");\n          callback(null, parseFloat(eth_balance));\n        } catch (ex) {\n          console.log(ex);\n          return callback(ex);\n        }\n      } else {\n        let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address);\n\n        try {\n          var balance = await erc20Contract.methods.balanceOf(asset.governatorContract).call({\n            from: account.address\n          });\n          balance = parseFloat(balance) / 10 ** asset.decimals;\n          callback(null, parseFloat(balance));\n        } catch (ex) {\n          console.log(ex);\n          return callback(ex);\n        }\n      }\n    };\n\n    this._getPoolValue = async (web3, asset, account, callback) => {\n      if (asset.governatorContract === null) {\n        return callback(null, 0);\n      }\n\n      try {\n        let governatorContract = new web3.eth.Contract(asset.abi, asset.governatorContract);\n        let value = 0;\n\n        if (asset.erc20address === 'Ethereum') {\n          value = web3.utils.fromWei(await governatorContract.methods.calcPoolValueInETH().call({\n            from: account.address\n          }), 'ether');\n        } else {\n          value = await governatorContract.methods.calcPoolValueInToken().call({\n            from: account.address\n          });\n\n          if (asset.decimals === 18) {\n            value = web3.utils.fromWei(value, 'ether');\n          } else {\n            value = value / 10 ** asset.decimals;\n          }\n        }\n\n        callback(null, parseFloat(value));\n      } catch (e) {\n        console.log(e);\n        callback(null, 0);\n      }\n    };\n\n    this._getPoolPrice = async (web3, asset, account, callback) => {\n      if (asset.governatorContract === null) {\n        return callback(null, 0);\n      }\n\n      let governatorContract = new web3.eth.Contract(config.IEarnABI, asset.governatorContract);\n      const balance = web3.utils.fromWei(await governatorContract.methods.getPricePerFullShare().call({\n        from: account.address\n      }), 'ether');\n      callback(null, parseFloat(balance));\n    };\n\n    this._getTransaction = async (web3, hash) => {\n      const rawTx = await web3.eth.getTransaction(hash);\n      return rawTx;\n    };\n\n    this._getPricePerFullShare = async (web3, governatorContract) => {\n      const balance = web3.utils.fromWei(await governatorContract.methods.getPricePerFullShare().call({}), 'ether');\n      return balance;\n    };\n\n    this.getBestPrice = payload => {\n      const account = store.getStore('account');\n      const {\n        sendAsset,\n        receiveAsset,\n        amount\n      } = payload.content;\n\n      this._getBestPrice(sendAsset, receiveAsset, account, amount, (err, price) => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(GET_BEST_PRICE_RETURNED, price);\n      });\n    };\n\n    this._getBestPrice = async (sendAsset, receiveAsset, account, amount, callback) => {\n      try {\n        const url = 'https://api-v2.dex.ag/price?from=' + sendAsset.symbol.toLowerCase() + '&to=' + receiveAsset.symbol.toLowerCase() + '&fromAmount=' + amount + '&dex=ag&tradable=true';\n        let price = await rp(url);\n        callback(null, JSON.parse(price));\n      } catch (e) {\n        callback(null, {});\n      }\n    };\n\n    this._getDexAgTrade = async (sendAsset, receiveAsset, account, amount) => {\n      const url = 'https://api-v2.dex.ag/trade?from=' + sendAsset.symbol.toLowerCase() + '&to=' + receiveAsset.symbol.toLowerCase() + '&fromAmount=' + amount + '&dex=ag';\n      let trade = await rp(url);\n      return JSON.parse(trade);\n    };\n\n    this._approveToken = async (token, spender, amount, account, web3) => {\n      // First 4 bytes of the hash of \"fee()\" for the sighash selector\n      let funcHash = ethers.utils.hexDataSlice(ethers.utils.id('approve(address,uint256)'), 0, 4);\n      let abi = new ethers.utils.AbiCoder();\n      let inputs = [{\n        name: 'spender',\n        type: 'address'\n      }, {\n        name: 'amount',\n        type: 'uint256'\n      }];\n      let params = [spender, amount];\n      let bytes = abi.encode(inputs, params).substr(2); // construct approval data from function hash and parameters\n\n      let inputData = `${funcHash}${bytes}`; // let nonce = await infuraProvider.getTransactionCount(ethersWallet.address);\n\n      let nonce = await web3.eth.getTransactionCount(account.address); // You will want to get the real gas price from https://ethgasstation.info/json/ethgasAPI.json\n\n      let gasPrice = web3.utils.toWei(await this._getGasPrice(), 'gwei');\n      let transaction = {\n        to: token,\n        nonce: nonce,\n        gasLimit: 500000,\n        // You will want to use estimateGas instead for real apps\n        gasPrice: gasPrice,\n        data: inputData,\n        from: account.address\n      }; // let tx = await ethersWallet.sendTransaction(transaction);\n\n      let tx = await web3.eth.sendTransaction(transaction);\n      console.log(tx);\n    };\n\n    this.governate = payload => {\n      const account = store.getStore('account');\n      const {\n        sendAsset,\n        receiveAsset,\n        amount\n      } = payload.content;\n      let contractAddress = '';\n\n      if (receiveAsset.id === 'uniV2') {\n        contractAddress = config.GovernatorAddress;\n      }\n\n      this._checkApproval(sendAsset, account, amount, contractAddress, err => {\n        if (err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        this._callGovernate(sendAsset, receiveAsset, account, amount, (err, governateResult) => {\n          if (err) {\n            return emitter.emit(ERROR, err);\n          }\n\n          return emitter.emit(ZAP_RETURNED, governateResult);\n        });\n      });\n    };\n\n    this._callGovernate = async (sendAsset, receiveAsset, account, amount, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      var amountToSend = web3.utils.toWei(amount, \"ether\");\n\n      if (sendAsset.decimals !== 18) {\n        amountToSend = amount * 10 ** sendAsset.decimals;\n      }\n\n      let governatorContract = null;\n\n      if (receiveAsset.id === 'uniV2') {\n        governatorContract = new web3.eth.Contract(config.governatorABI, config.governatorAddress);\n      }\n\n      let call = '';\n\n      switch (sendAsset.id) {\n        case 'GDAOv2':\n          call = 'depositDAI';\n          break;\n\n        case 'USDCv2':\n        case 'USDCv3':\n          call = 'depositUSDC';\n          break;\n\n        case 'USDTv2':\n        case 'USDTv3':\n          call = 'depositUSDT';\n          break;\n\n        case 'crvV3':\n        case 'crvV4':\n          switch (receiveAsset.id) {\n            case 'DAIv2':\n            case 'DAIv3':\n              call = 'withdrawDAI';\n              break;\n\n            case 'USDCv2':\n            case 'USDCv3':\n              call = 'withdrawUSDC';\n              break;\n\n            case 'USDTv2':\n            case 'USDTv3':\n              call = 'withdrawUSDT';\n              break;\n\n            case 'TUSDv2':\n              call = 'withdrawTUSD';\n              break;\n\n            default:\n          }\n\n          break;\n\n        default:\n      }\n\n      governatorContract.methods[call](amountToSend).send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n      }).on('transactionHash', function (hash) {\n        console.log(hash);\n        callback(null, hash);\n      }).on('confirmation', function (confirmationNumber, receipt) {\n        console.log(confirmationNumber, receipt);\n      }).on('receipt', function (receipt) {\n        console.log(receipt);\n      }).on('error', function (error) {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      }).catch(error => {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            return callback(error.message);\n          }\n\n          callback(error);\n        }\n      });\n    };\n\n    this._checkIfApprovalIsNeeded = async (asset, account, amount, contract, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address);\n      const allowance = await erc20Contract.methods.allowance(account.address, contract).call({\n        from: account.address\n      });\n      const ethAllowance = web3.utils.fromWei(allowance, \"ether\");\n\n      if (parseFloat(ethAllowance) < parseFloat(amount)) {\n        asset.amount = amount;\n        callback(null, asset);\n      } else {\n        callback(null, false);\n      }\n    };\n\n    this._callApproval = async (asset, account, amount, contract, last, callback) => {\n      const web3 = new Web3(store.getStore('web3context').library.provider);\n      let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address);\n\n      try {\n        if (['GDAOv2'].includes(asset.id)) {\n          const allowance = await erc20Contract.methods.allowance(account.address, contract).call({\n            from: account.address\n          });\n          const ethAllowance = web3.utils.fromWei(allowance, \"ether\");\n\n          if (ethAllowance > 0) {\n            erc20Contract.methods.approve(contract, web3.utils.toWei('0', \"ether\")).send({\n              from: account.address,\n              gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n            }).on('transactionHash', function (hash) {//success...\n            }).on('error', function (error) {\n              if (!error.toString().includes(\"-32601\")) {\n                if (error.message) {\n                  return callback(error.message);\n                }\n\n                callback(error);\n              }\n            });\n          }\n        }\n\n        if (last) {\n          await erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n          });\n          callback();\n        } else {\n          erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei')\n          }).on('transactionHash', function (hash) {\n            callback();\n          }).on('error', function (error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if (error.message) {\n                return callback(error.message);\n              }\n\n              callback(error);\n            }\n          });\n        }\n      } catch (error) {\n        if (error.message) {\n          return callback(error.message);\n        }\n\n        callback(error);\n      }\n    };\n\n    this.getUSDPrices = async () => {\n      try {\n        const priceJSON = await this._getUSDPrices();\n        store.setStore({\n          usdPrices: priceJSON\n        });\n        return emitter.emit(USD_PRICE_RETURNED, priceJSON);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this._getUSDPrices = async () => {\n      try {\n        const url = 'https://api.coingecko.com/api/v3/simple/price?ids=governor-dao,usd-coin,dai,true-usd,tether,usd-coin,chainlink,yearn-finance,binance-usd,wrapped-bitcoin,ethereum,nusd,chainlink,aave-link,lp-sbtc-curve,lp-bcurve,curve-fi-ydai-yusdc-yusdt-ytusd,lp-3pool-curve,gemini-dollar,curve-dao-token&vs_currencies=usd,eth';\n        const priceString = await rp(url);\n        const priceJSON = JSON.parse(priceString);\n        return priceJSON;\n      } catch (e) {\n        console.log(e);\n        return null;\n      }\n    };\n\n    this._getETHUSDPrices = async () => {\n      try {\n        const url = 'https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd';\n        const priceString = await rp(url);\n        const priceJSON = JSON.parse(priceString);\n        return priceJSON.ethereum.usd;\n      } catch (e) {\n        console.log(e);\n        return null;\n      }\n    };\n\n    this._getGasPrice = async () => {\n      try {\n        const url = 'https://gasprice.poa.network/';\n        const priceString = await rp(url);\n        const priceJSON = JSON.parse(priceString);\n\n        if (priceJSON) {\n          return priceJSON.fast.toFixed(0);\n        }\n\n        return store.getStore('universalGasPrice');\n      } catch (e) {\n        console.log(e);\n        return store.getStore('universalGasPrice');\n      }\n    };\n\n    this._getWeb3Provider = async () => {\n      const web3context = store.getStore('web3context');\n\n      if (!web3context) {\n        return null;\n      }\n\n      const provider = web3context.library.provider;\n\n      if (!provider) {\n        return null;\n      }\n\n      const web3 = new Web3(provider); // const web3 = createAlchemyWeb3(config.infuraProvider, { writeProvider: provider });\n\n      return web3;\n    };\n\n    this._getAllMarkets = async web3 => {\n      const comptrollerContract = new web3.eth.Contract(config.comptrollerContractABI, config.comptrollerContractAddress);\n      const allMarkets = await comptrollerContract.methods.getAllMarkets().call();\n      return allMarkets;\n    };\n\n    this._getAssetsIn = async (web3, account) => {\n      const comptrollerContract = new web3.eth.Contract(config.comptrollerContractABI, config.comptrollerContractAddress);\n      const assetsIn = await comptrollerContract.methods.getAssetsIn(account.address).call();\n      return assetsIn;\n    };\n\n    const defaultValues = this._getDefaultValues();\n\n    this.store = {\n      statistics: [],\n      universalGasPrice: '70',\n      ethPrice: 0,\n      aprs: defaultValues.aprs,\n      assets: defaultValues.assets,\n      usdPrices: null,\n      account: {},\n      web3: null,\n      pricePerFullShare: 0,\n      yields: [],\n      aggregatedYields: [],\n      aggregatedHeaders: [],\n      uniswapYields: [],\n      uniswapLiquidity: [],\n      events: [],\n      connectorsByName: {\n        MetaMask: injected,\n        TrustWallet: injected,\n        WalletConnect: walletconnect,\n        WalletLink: walletlink,\n        Ledger: ledger,\n        Trezor: trezor,\n        Frame: frame,\n        Fortmatic: fortmatic,\n        Portis: portis,\n        Squarelink: squarelink,\n        Torus: torus,\n        Authereum: authereum\n      },\n      web3context: null,\n      languages: [{\n        language: 'English',\n        code: 'en'\n      }, {\n        language: 'Japanese',\n        code: 'ja'\n      }, {\n        language: 'Chinese',\n        code: 'zh'\n      }, {\n        languages: 'European Portuguese',\n        code: 'pt'\n      }],\n      curvBalance: 0,\n      uniBalance: 0,\n      uniContracts: [{\n        id: 'GDAOv2',\n        symbol: 'GDAO.uniV2',\n        version: 1,\n        erc20address: '0x4D184bf6F805Ee839517164D301f0C4e5d25c374',\n        decimals: 18,\n        balance: 0\n      }, {\n        id: 'WETH',\n        symbol: 'WETH',\n        version: 1,\n        erc20address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        decimals: 18,\n        balance: 0\n      }],\n      ethBalance: 0\n    };\n    dispatcher.register(function (payload) {\n      switch (payload.type) {\n        case GET_BALANCES_LIGHT:\n          this.getBalancesLight(payload);\n          break;\n\n        case GET_BALANCES:\n          this.getBalances(payload);\n          break;\n\n        case ZAP:\n          this.governate(payload);\n          break;\n\n        case GET_BEST_PRICE:\n          this.getBestPrice(payload);\n          break;\n\n        default:\n          {}\n      }\n    }.bind(this));\n  }\n\n  getStore(index) {\n    return this.store[index];\n  }\n\n  setStore(obj) {\n    this.store = { ...this.store,\n      ...obj\n    }; // console.log(this.store)\n\n    return emitter.emit('StoreUpdated');\n  }\n\n}\n\nvar store = new Store();\nexport default {\n  store: store,\n  dispatcher: dispatcher,\n  emitter: emitter\n};","map":{"version":3,"sources":["/Users/unico/Documents/GitHub/ventures/src/stores/store.jsx"],"names":["config","async","ERROR","GET_BALANCES","BALANCES_RETURNED","GET_BALANCES_LIGHT","BALANCES_LIGHT_RETURNED","ZAP","ZAP_RETURNED","GET_BEST_PRICE","GET_BEST_PRICE_RETURNED","USD_PRICE_RETURNED","MAX_UINT256","Web3","BigNumber","injected","walletconnect","walletlink","ledger","trezor","frame","fortmatic","portis","squarelink","torus","authereum","rp","require","ethers","Dispatcher","Emitter","EventEmitter","dispatcher","emitter","Store","constructor","resetProfile","defaultvalues","_getDefaultValues","store","setStore","assets","id","name","symbol","description","investSymbol","erc20address","governatorContract","apr","maxApr","balance","investedBalance","price","decimals","poolValue","abi","governatorABI","version","disabled","invest","redeem","curve","price_id","IEarnABI","_checkApproval","asset","account","amount","contract","callback","web3","getStore","library","provider","erc20Contract","eth","Contract","erc20ABI","allowance","methods","address","call","from","ethAllowance","utils","fromWei","toFixed","amountToSend","parseFloat","includes","approve","toWei","send","gasPrice","_getGasPrice","error","message","_checkApprovalWaitForConfirmation","on","hash","toString","_callInvest","value","console","log","confirmationNumber","receipt","catch","getBalancesLight","_getWeb3Provider","map","parallel","callbackInner","_getERC20Balance","_getInvestedBalance","_getPoolPrice","_getMaxAPR","err","data","emit","getBalances","_getPoolValue","_getBalance","current","recommended","tokenBalance","eth_balance","getBalance","ex","balanceOf","calcPoolValueInETH","calcPoolValueInToken","e","getPricePerFullShare","_getTransaction","rawTx","getTransaction","_getPricePerFullShare","getBestPrice","payload","sendAsset","receiveAsset","content","_getBestPrice","url","toLowerCase","JSON","parse","_getDexAgTrade","trade","_approveToken","token","spender","funcHash","hexDataSlice","AbiCoder","inputs","type","params","bytes","encode","substr","inputData","nonce","getTransactionCount","transaction","to","gasLimit","tx","sendTransaction","governate","contractAddress","GovernatorAddress","_callGovernate","governateResult","governatorAddress","_checkIfApprovalIsNeeded","_callApproval","last","getUSDPrices","priceJSON","_getUSDPrices","usdPrices","priceString","_getETHUSDPrices","ethereum","usd","fast","web3context","_getAllMarkets","comptrollerContract","comptrollerContractABI","comptrollerContractAddress","allMarkets","getAllMarkets","_getAssetsIn","assetsIn","getAssetsIn","defaultValues","statistics","universalGasPrice","ethPrice","aprs","pricePerFullShare","yields","aggregatedYields","aggregatedHeaders","uniswapYields","uniswapLiquidity","events","connectorsByName","MetaMask","TrustWallet","WalletConnect","WalletLink","Ledger","Trezor","Frame","Fortmatic","Portis","Squarelink","Torus","Authereum","languages","language","code","curvBalance","uniBalance","uniContracts","ethBalance","register","bind","index","obj"],"mappings":"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","sourcesContent":["import config from \"../config\";\nimport async from 'async';\nimport {\n  ERROR,\n  GET_BALANCES,\n  BALANCES_RETURNED,\n  GET_BALANCES_LIGHT,\n  BALANCES_LIGHT_RETURNED,\n  ZAP,\n  ZAP_RETURNED,\n  GET_BEST_PRICE,\n  GET_BEST_PRICE_RETURNED,\n  USD_PRICE_RETURNED,\n  MAX_UINT256,\n} from '../constants';\nimport Web3 from 'web3';\nimport BigNumber from 'bignumber.js'\n\nimport {\n  injected,\n  walletconnect,\n  walletlink,\n  ledger,\n  trezor,\n  frame,\n  fortmatic,\n  portis,\n  squarelink,\n  torus,\n  authereum\n} from \"./connectors\";\n\nconst rp = require('request-promise');\nconst ethers = require('ethers');\n\nconst Dispatcher = require('flux').Dispatcher;\nconst Emitter = require('events').EventEmitter;\n\nconst dispatcher = new Dispatcher();\nconst emitter = new Emitter();\n\nclass Store {\n  constructor() {\n\n    const defaultValues = this._getDefaultValues()\n\n    this.store = {\n      statistics: [],\n      universalGasPrice: '70',\n      ethPrice: 0,\n      aprs: defaultValues.aprs,\n      assets: defaultValues.assets,\n      usdPrices: null,\n      account: {},\n      web3: null,\n      pricePerFullShare: 0,\n      yields: [],\n      aggregatedYields: [],\n      aggregatedHeaders: [],\n      uniswapYields: [],\n      uniswapLiquidity: [],\n      events: [],\n      connectorsByName: {\n        MetaMask: injected,\n        TrustWallet: injected,\n        WalletConnect: walletconnect,\n        WalletLink: walletlink,\n        Ledger: ledger,\n        Trezor: trezor,\n        Frame: frame,\n        Fortmatic: fortmatic,\n        Portis: portis,\n        Squarelink: squarelink,\n        Torus: torus,\n        Authereum: authereum\n      },\n      web3context: null,\n      languages: [\n        {\n          language: 'English',\n          code: 'en'\n        },\n        {\n          language: 'Japanese',\n          code: 'ja'\n        },\n        {\n          language: 'Chinese',\n          code: 'zh'\n        },\n        {\n          languages: 'European Portuguese',\n          code: 'pt'\n        }\n      ],\n      curvBalance: 0,\n      uniBalance: 0,\n      uniContracts: [\n        {\n          id: 'GDAOv2',\n          symbol: 'GDAO.uniV2',\n          version: 1,\n          erc20address: '0x4D184bf6F805Ee839517164D301f0C4e5d25c374',\n          decimals: 18,\n          balance: 0\n        },\n        {\n          id: 'WETH',\n          symbol: 'WETH',\n          version: 1,\n          erc20address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n          decimals: 18,\n          balance: 0\n        },\n      ],\n      ethBalance: 0\n    }\n\n    dispatcher.register(\n      function (payload) {\n        switch (payload.type) {\n          case GET_BALANCES_LIGHT:\n            this.getBalancesLight(payload);\n            break;\n          case GET_BALANCES:\n            this.getBalances(payload);\n            break;\n          case ZAP:\n            this.governate(payload)\n            break;\n          case GET_BEST_PRICE:\n            this.getBestPrice(payload)\n            break;\n          default: {\n          }\n        }\n      }.bind(this)\n    );\n  }\n\n  getStore(index) {\n    return(this.store[index]);\n  };\n\n  setStore(obj) {\n    this.store = {...this.store, ...obj}\n    // console.log(this.store)\n    return emitter.emit('StoreUpdated');\n  };\n\n  resetProfile = () => {\n    const defaultvalues = this._getDefaultValues()\n\n    store.setStore({\n      assets: defaultvalues.assets,\n    })\n  }\n\n  _getDefaultValues = () => {\n    return {\n      assets: [\n        {\n          id: 'GDAO',\n          name: 'GDAO',\n          symbol: 'GDAO',\n          description: 'Governor DAO',\n          investSymbol: 'GDAO',\n          erc20address: '0x4DaC3e07316D2A31baABb252D89663deE8F76f09',\n          governatorContract: '0x09e16AD071f4F80c02856275116cC772ba74b62c',\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          investedBalance: 0,\n          price: 0,\n          decimals: 18,\n          poolValue: 0,\n          abi: config.governatorABI,\n          version: 3,\n          disabled: true,\n          invest: 'deposit',\n          redeem: 'withdraw',\n          curve: true,\n          price_id: 'governor-dao'\n        },\n        {\n          id: 'ETHv1',\n          name: 'ETH',\n          symbol: 'ETH',\n          description: 'Ethereum',\n          investSymbol: 'iETH',\n          erc20address: 'Ethereum',\n          governatorContract: '0x9Dde7cdd09dbed542fC422d18d89A589fA9fD4C0',\n          apr: 0,\n          maxApr: 0,\n          balance: 0,\n          decimals: 18,\n          investedBalance: 0,\n          price: 0,\n          poolValue: 0,\n          abi: config.IEarnABI,\n          version: 1,\n          disabled: true,\n          invest: 'invest',\n          redeem: 'redeem',\n          price_id: 'ethereum',\n        },\n      ],\n    }\n  }\n\n\n  _checkApproval = async (asset, account, amount, contract, callback) => {\n\n    if(asset.erc20address === 'Ethereum') {\n      return callback()\n    }\n\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n    let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address)\n    try {\n      const allowance = await erc20Contract.methods.allowance(account.address, contract).call({ from: account.address })\n\n      let ethAllowance = web3.utils.fromWei(allowance, \"ether\")\n      if (asset.decimals !== 18) {\n        ethAllowance = (allowance*10**asset.decimals).toFixed(0);\n      }\n\n      const amountToSend = MAX_UINT256;\n\n      if(parseFloat(ethAllowance) < parseFloat(amount)) {\n        /*\n          code to accomodate for \"assert _value == 0 or self.allowances[msg.sender][_spender] == 0\" in contract\n          We check to see if the allowance is > 0. If > 0 set to 0 before we set it to the correct amount.\n        */\n        if(['GDAOv2'].includes(asset.id) && ethAllowance > 0) {\n          await erc20Contract.methods.approve(contract, web3.utils.toWei('0', \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        }\n\n        await erc20Contract.methods.approve(contract, amountToSend).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        callback()\n      } else {\n        callback()\n      }\n    } catch(error) {\n      if(error.message) {\n        return callback(error.message)\n      }\n      callback(error)\n    }\n  }\n\n  _checkApprovalWaitForConfirmation = async (asset, account, amount, contract, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n    let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address)\n    const allowance = await erc20Contract.methods.allowance(account.address, contract).call({ from: account.address })\n\n    const ethAllowance = web3.utils.fromWei(allowance, \"ether\")\n\n    if(parseFloat(ethAllowance) < parseFloat(amount)) {\n      if(['GDAOv2'].includes(asset.id) && ethAllowance > 0) {\n        erc20Contract.methods.approve(contract, web3.utils.toWei('0', \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n          .on('transactionHash', async function(hash){\n            erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n              .on('transactionHash', function(hash){\n                callback()\n              })\n              .on('error', function(error) {\n                if (!error.toString().includes(\"-32601\")) {\n                  if(error.message) {\n                    return callback(error.message)\n                  }\n                  callback(error)\n                }\n              })\n          })\n          .on('error', function(error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if(error.message) {\n                return callback(error.message)\n              }\n              callback(error)\n            }\n          })\n      } else {\n        erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n          .on('transactionHash', function(hash){\n            callback()\n          })\n          .on('error', function(error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if(error.message) {\n                return callback(error.message)\n              }\n              callback(error)\n            }\n          })\n      }\n    } else {\n      callback()\n    }\n  }\n\n  _callInvest = async (asset, account, amount, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    let governatorContract = new web3.eth.Contract(asset.abi, asset.governatorContract)\n    if(asset.erc20address === 'Ethereum') {\n      governatorContract.methods[asset.invest]().send({ from: account.address, value: web3.utils.toWei(amount, \"ether\"), gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          console.log(receipt);\n        })\n        .on('error', function(error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n        .catch((error) => {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n    } else {\n      var amountToSend = web3.utils.toWei(amount, \"ether\")\n      if (asset.decimals !== 18) {\n        amountToSend = amount*10**asset.decimals;\n      }\n      governatorContract.methods[asset.invest](amountToSend).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        .on('transactionHash', function(hash){\n          console.log(hash)\n          callback(null, hash)\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n          console.log(confirmationNumber, receipt);\n        })\n        .on('receipt', function(receipt){\n          console.log(receipt);\n        })\n        .on('error', function(error) {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n        .catch((error) => {\n          if (!error.toString().includes(\"-32601\")) {\n            if(error.message) {\n              return callback(error.message)\n            }\n            callback(error)\n          }\n        })\n    }\n  }\n\n\n\n  getBalancesLight = async () => {\n    const account = store.getStore('account')\n\n    const assets = store.getStore('assets')\n\n    if(!account || !account.address) {\n      return false\n    }\n\n    const web3 = await this._getWeb3Provider();\n    if(!web3) {\n      return null\n    }\n\n    async.map(assets, (asset, callback) => {\n      async.parallel([\n        (callbackInner) => { this._getERC20Balance(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getInvestedBalance(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getPoolPrice(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getMaxAPR(web3, asset, account, callbackInner) },\n      ], (err, data) => {\n        asset.balance = data[0]\n        asset.investedBalance = data[1]\n        asset.price = data[2]\n        asset.maxApr = data[3]\n\n        callback(null, asset)\n      })\n    }, (err, assets) => {\n      if(err) {\n        return emitter.emit(ERROR, err)\n      }\n\n      store.setStore({ assets: assets })\n      return emitter.emit(BALANCES_LIGHT_RETURNED, assets)\n    })\n  }\n\n  getBalances = async () => {\n    const account = store.getStore('account')\n\n    const assets = store.getStore('assets')\n\n    if(!account || !account.address) {\n      return false\n    }\n\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    async.map(assets, (asset, callback) => {\n      async.parallel([\n        (callbackInner) => { this._getERC20Balance(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getPoolPrice(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getPoolValue(web3, asset, account, callbackInner) },\n        (callbackInner) => { this._getBalance(web3, asset, account, callbackInner) },\n      ], (err, data) => {\n        asset.balance = data[0]\n        asset.price = data[2]\n        asset.poolValue = data[4]\n        asset.current = data[6]\n        asset.recommended = data[7]\n        asset.tokenBalance = data[8]\n\n        callback(null, asset)\n      })\n    }, (err, assets) => {\n      if(err) {\n        return emitter.emit(ERROR, err)\n      }\n\n      store.setStore({ assets: assets })\n      return emitter.emit(BALANCES_RETURNED, assets)\n    })\n  }\n\n  _getERC20Balance = async (web3, asset, account, callback) => {\n\n    if(asset.erc20address === 'Ethereum') {\n      try {\n        const eth_balance = web3.utils.fromWei(await web3.eth.getBalance(account.address), \"ether\");\n        callback(null, parseFloat(eth_balance))\n      } catch(ex) {\n        console.log(ex)\n        return callback(ex)\n      }\n    } else {\n      let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address)\n\n      try {\n        var balance = await erc20Contract.methods.balanceOf(account.address).call({ from: account.address });\n        balance = parseFloat(balance)/10**asset.decimals\n        callback(null, parseFloat(balance))\n      } catch(ex) {\n        console.log(ex)\n        return callback(ex)\n      }\n    }\n  }\n\n  _getBalance = async (web3, asset, account, callback) => {\n\n    if(asset.governatorContract === null) {\n      return callback(null, 0)\n    }\n\n    if(asset.erc20address === 'Ethereum') {\n      try {\n        const eth_balance = web3.utils.fromWei(await web3.eth.getBalance(asset.governatorContract), \"ether\");\n        callback(null, parseFloat(eth_balance))\n      } catch(ex) {\n        console.log(ex)\n        return callback(ex)\n      }\n    } else {\n      let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address)\n\n      try {\n        var balance = await erc20Contract.methods.balanceOf(asset.governatorContract).call({ from: account.address });\n        balance = parseFloat(balance)/10**asset.decimals\n        callback(null, parseFloat(balance))\n      } catch(ex) {\n        console.log(ex)\n        return callback(ex)\n      }\n    }\n  }\n\n\n  _getPoolValue = async (web3, asset, account, callback) => {\n\n    if(asset.governatorContract === null) {\n      return callback(null, 0)\n    }\n\n    try {\n      let governatorContract = new web3.eth.Contract(asset.abi, asset.governatorContract)\n      let value = 0\n\n      if(asset.erc20address === 'Ethereum') {\n        value = web3.utils.fromWei(await governatorContract.methods.calcPoolValueInETH().call({ from: account.address }), 'ether');\n      } else {\n        value = await governatorContract.methods.calcPoolValueInToken().call({ from: account.address });\n        if (asset.decimals === 18) {\n          value = web3.utils.fromWei(value, 'ether');\n        } else {\n          value = value / (10 ** asset.decimals);\n        }\n      }\n      callback(null, parseFloat(value))\n    } catch (e) {\n      console.log(e)\n      callback(null, 0)\n    }\n\n  }\n\n  _getPoolPrice = async (web3, asset, account, callback) => {\n\n    if(asset.governatorContract === null) {\n      return callback(null, 0)\n    }\n\n    let governatorContract = new web3.eth.Contract(config.IEarnABI, asset.governatorContract)\n    const balance = web3.utils.fromWei(await governatorContract.methods.getPricePerFullShare().call({ from: account.address }), 'ether');\n    callback(null, parseFloat(balance))\n  }\n\n  _getTransaction = async (web3, hash) => {\n    const rawTx = await web3.eth.getTransaction(hash)\n    return rawTx\n  }\n\n  _getPricePerFullShare = async (web3, governatorContract) => {\n    const balance = web3.utils.fromWei(await governatorContract.methods.getPricePerFullShare().call({ }), 'ether');\n    return balance\n  }\n\n  getBestPrice = (payload) => {\n    const account = store.getStore('account')\n    const { sendAsset, receiveAsset, amount } = payload.content\n\n    this._getBestPrice(sendAsset, receiveAsset, account, amount, (err, price) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      return emitter.emit(GET_BEST_PRICE_RETURNED, price)\n    })\n  }\n\n  _getBestPrice = async (sendAsset, receiveAsset, account, amount, callback) => {\n    try {\n      const url = 'https://api-v2.dex.ag/price?from='+sendAsset.symbol.toLowerCase()+'&to='+receiveAsset.symbol.toLowerCase()+'&fromAmount='+amount+'&dex=ag&tradable=true'\n      let price = await rp(url);\n      callback(null, JSON.parse(price));\n    } catch(e) {\n      callback(null, {})\n    }\n  }\n\n\n  _getDexAgTrade = async (sendAsset, receiveAsset, account, amount) => {\n    const url = 'https://api-v2.dex.ag/trade?from='+sendAsset.symbol.toLowerCase()+'&to='+receiveAsset.symbol.toLowerCase()+'&fromAmount='+amount+'&dex=ag'\n    let trade = await rp(url);\n    return JSON.parse(trade);\n  }\n\n  _approveToken = async (token, spender, amount, account, web3) => {\n    // First 4 bytes of the hash of \"fee()\" for the sighash selector\n    let funcHash = ethers.utils.hexDataSlice(ethers.utils.id('approve(address,uint256)'), 0, 4);\n\n    let abi = new ethers.utils.AbiCoder();\n    let inputs = [{\n      name: 'spender',\n      type: 'address'\n    }, {\n      name: 'amount',\n      type: 'uint256'\n    }];\n\n    let params = [spender, amount];\n    let bytes = abi.encode(inputs, params).substr(2);\n\n    // construct approval data from function hash and parameters\n    let inputData = `${funcHash}${bytes}`;\n\n    // let nonce = await infuraProvider.getTransactionCount(ethersWallet.address);\n    let nonce = await web3.eth.getTransactionCount(account.address)\n\n    // You will want to get the real gas price from https://ethgasstation.info/json/ethgasAPI.json\n    let gasPrice = web3.utils.toWei(await this._getGasPrice(), 'gwei');\n\n    let transaction = {\n      to: token,\n      nonce: nonce,\n      gasLimit: 500000, // You will want to use estimateGas instead for real apps\n      gasPrice: gasPrice,\n      data: inputData,\n      from: account.address\n    }\n\n    // let tx = await ethersWallet.sendTransaction(transaction);\n    let tx = await web3.eth.sendTransaction(transaction)\n    console.log(tx);\n  }\n\n  governate = (payload) => {\n    const account = store.getStore('account')\n    const { sendAsset, receiveAsset, amount } = payload.content\n\n    let contractAddress = ''\n\n    if(receiveAsset.id === 'uniV2') {\n      contractAddress = config.GovernatorAddress\n    }\n\n    this._checkApproval(sendAsset, account, amount, contractAddress, (err) => {\n      if(err) {\n        return emitter.emit(ERROR, err);\n      }\n\n      this._callGovernate(sendAsset, receiveAsset, account, amount, (err, governateResult) => {\n        if(err) {\n          return emitter.emit(ERROR, err);\n        }\n\n        return emitter.emit(ZAP_RETURNED, governateResult)\n      })\n    })\n  }\n\n  _callGovernate = async (sendAsset, receiveAsset, account, amount, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n\n    var amountToSend = web3.utils.toWei(amount, \"ether\")\n    if (sendAsset.decimals !== 18) {\n      amountToSend = amount*10**sendAsset.decimals;\n    }\n\n    let governatorContract = null\n    if(receiveAsset.id === 'uniV2') {\n      governatorContract = new web3.eth.Contract(config.governatorABI, config.governatorAddress)\n    }\n    let call = ''\n\n    switch (sendAsset.id) {\n      case 'GDAOv2':\n        call = 'depositDAI'\n        break;\n      case 'USDCv2':\n      case 'USDCv3':\n        call = 'depositUSDC'\n        break;\n      case 'USDTv2':\n      case 'USDTv3':\n        call = 'depositUSDT'\n        break;\n      case 'crvV3':\n      case 'crvV4':\n        switch (receiveAsset.id) {\n          case 'DAIv2':\n          case 'DAIv3':\n            call = 'withdrawDAI'\n            break;\n          case 'USDCv2':\n          case 'USDCv3':\n            call = 'withdrawUSDC'\n            break;\n          case 'USDTv2':\n          case 'USDTv3':\n            call = 'withdrawUSDT'\n            break;\n          case 'TUSDv2':\n            call = 'withdrawTUSD'\n            break;\n          default:\n        }\n        break;\n      default:\n    }\n\n    governatorContract.methods[call](amountToSend).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n      .on('transactionHash', function(hash){\n        console.log(hash)\n        callback(null, hash)\n      })\n      .on('confirmation', function(confirmationNumber, receipt){\n        console.log(confirmationNumber, receipt);\n      })\n      .on('receipt', function(receipt){\n        console.log(receipt);\n      })\n      .on('error', function(error) {\n        if (!error.toString().includes(\"-32601\")) {\n          if(error.message) {\n            return callback(error.message)\n          }\n          callback(error)\n        }\n      })\n      .catch((error) => {\n        if (!error.toString().includes(\"-32601\")) {\n          if(error.message) {\n            return callback(error.message)\n          }\n          callback(error)\n        }\n      })\n  }\n\n  _checkIfApprovalIsNeeded = async (asset, account, amount, contract, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n    let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address)\n    const allowance = await erc20Contract.methods.allowance(account.address, contract).call({ from: account.address })\n\n    const ethAllowance = web3.utils.fromWei(allowance, \"ether\")\n    if(parseFloat(ethAllowance) < parseFloat(amount)) {\n      asset.amount = amount\n      callback(null, asset)\n    } else {\n      callback(null, false)\n    }\n  }\n\n  _callApproval = async (asset, account, amount, contract, last, callback) => {\n    const web3 = new Web3(store.getStore('web3context').library.provider);\n    let erc20Contract = new web3.eth.Contract(config.erc20ABI, asset.erc20address)\n    try {\n      if(['GDAOv2'].includes(asset.id)) {\n        const allowance = await erc20Contract.methods.allowance(account.address, contract).call({ from: account.address })\n        const ethAllowance = web3.utils.fromWei(allowance, \"ether\")\n        if(ethAllowance > 0) {\n          erc20Contract.methods.approve(contract, web3.utils.toWei('0', \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n            .on('transactionHash', function(hash){\n              //success...\n            })\n            .on('error', function(error) {\n              if (!error.toString().includes(\"-32601\")) {\n                if(error.message) {\n                  return callback(error.message)\n                }\n                callback(error)\n              }\n            })\n        }\n      }\n\n      if(last) {\n        await erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n        callback()\n      } else {\n        erc20Contract.methods.approve(contract, web3.utils.toWei(amount, \"ether\")).send({ from: account.address, gasPrice: web3.utils.toWei(await this._getGasPrice(), 'gwei') })\n          .on('transactionHash', function(hash){\n            callback()\n          })\n          .on('error', function(error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if(error.message) {\n                return callback(error.message)\n              }\n              callback(error)\n            }\n          })\n      }\n    } catch(error) {\n      if(error.message) {\n        return callback(error.message)\n      }\n      callback(error)\n    }\n  }\n\n  getUSDPrices = async () => {\n    try {\n      const priceJSON = await this._getUSDPrices()\n\n      store.setStore({ usdPrices: priceJSON })\n      return emitter.emit(USD_PRICE_RETURNED, priceJSON)\n\n    } catch(e) {\n      console.log(e)\n    }\n  }\n\n  _getUSDPrices = async () => {\n    try {\n      const url = 'https://api.coingecko.com/api/v3/simple/price?ids=governor-dao,usd-coin,dai,true-usd,tether,usd-coin,chainlink,yearn-finance,binance-usd,wrapped-bitcoin,ethereum,nusd,chainlink,aave-link,lp-sbtc-curve,lp-bcurve,curve-fi-ydai-yusdc-yusdt-ytusd,lp-3pool-curve,gemini-dollar,curve-dao-token&vs_currencies=usd,eth'\n      const priceString = await rp(url);\n      const priceJSON = JSON.parse(priceString)\n\n      return priceJSON\n    } catch(e) {\n      console.log(e)\n      return null\n    }\n  }\n\n  _getETHUSDPrices = async () => {\n    try {\n      const url = 'https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd'\n      const priceString = await rp(url);\n      const priceJSON = JSON.parse(priceString)\n\n      return priceJSON.ethereum.usd\n    } catch(e) {\n      console.log(e)\n      return null\n    }\n  }\n\n   _getGasPrice = async () => {\n    try {\n      const url = 'https://gasprice.poa.network/'\n      const priceString = await rp(url);\n      const priceJSON = JSON.parse(priceString)\n      if(priceJSON) {\n        return priceJSON.fast.toFixed(0)\n      }\n      return store.getStore('universalGasPrice')\n    } catch(e) {\n      console.log(e)\n      return store.getStore('universalGasPrice')\n    }\n  }\n\n  _getWeb3Provider = async () => {\n    const web3context = store.getStore('web3context')\n    if(!web3context) {\n      return null\n    }\n    const provider = web3context.library.provider\n    if(!provider) {\n      return null\n    }\n\n    const web3 = new Web3(provider);\n\n    // const web3 = createAlchemyWeb3(config.infuraProvider, { writeProvider: provider });\n\n    return web3\n  }\n\n  _getAllMarkets = async (web3) => {\n    const comptrollerContract = new web3.eth.Contract(config.comptrollerContractABI, config.comptrollerContractAddress)\n\n    const allMarkets = await comptrollerContract.methods.getAllMarkets().call()\n\n    return allMarkets\n  }\n\n  _getAssetsIn = async (web3, account) => {\n    const comptrollerContract = new web3.eth.Contract(config.comptrollerContractABI, config.comptrollerContractAddress)\n\n    const assetsIn = await comptrollerContract.methods.getAssetsIn(account.address).call()\n\n    return assetsIn\n  }\n}\n\nvar store = new Store();\n\nexport default {\n  store: store,\n  dispatcher: dispatcher,\n  emitter: emitter\n};\n"]},"metadata":{},"sourceType":"module"}